name: 'Run xword-dl with optional SSH proxy'
description: 'Runs xword-dl command with automatic SSH SOCKS proxy setup if SSH_PROXY_HOST is defined'
inputs:
  command:
    description: 'The xword-dl command and arguments to run'
    required: true
  ssh-proxy-host:
    description: 'SSH proxy host (optional)'
    required: false
  ssh-proxy-port:
    description: 'SSH proxy SSH port'
    required: false
    default: '22'
  ssh-proxy-user:
    description: 'SSH proxy username'
    required: false
    default: 'ubuntu'
  ssh-private-key:
    description: 'SSH private key for proxy connection'
    required: false
  socks-port:
    description: 'Local SOCKS proxy port'
    required: false
    default: '1080'
  nyt-s-value:
    description: 'NYT-S cookie value for NYT authentication'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Setup SSH tunnel if proxy host is defined
      if: inputs.ssh-proxy-host != ''
      shell: bash
      run: |
        # Create SSH key file
        mkdir -p ~/.ssh
        echo "${{ inputs.ssh-private-key }}" > ~/.ssh/xword_proxy_key
        chmod 600 ~/.ssh/xword_proxy_key

        # Add host to known_hosts to avoid prompts
        ssh-keyscan -p ${{ inputs.ssh-proxy-port }} ${{ inputs.ssh-proxy-host }} >> ~/.ssh/known_hosts 2>/dev/null

        # Start SSH SOCKS proxy in background
        ssh -f -N -D ${{ inputs.socks-port }} \
          -o StrictHostKeyChecking=accept-new \
          -i ~/.ssh/xword_proxy_key \
          -p ${{ inputs.ssh-proxy-port }} \
          ${{ inputs.ssh-proxy-user }}@${{ inputs.ssh-proxy-host }}

        # Save the SSH PID for cleanup
        SSH_PID=$(pgrep -f "ssh.*-D ${{ inputs.socks-port }}")
        echo "SSH_TUNNEL_PID=$SSH_PID" >> $GITHUB_ENV

        # Set HTTPS_PROXY for this and subsequent steps
        echo "HTTPS_PROXY=socks5h://127.0.0.1:${{ inputs.socks-port }}" >> $GITHUB_ENV

        # Give the tunnel a moment to establish
        sleep 2

    - name: Run xword-dl command
      shell: bash
      env:
        NYT_S_VALUE: ${{ inputs.nyt-s-value }}
      run: |
        if [ -n "$NYT_S_VALUE" ]; then
          ${{ inputs.command }} --settings '{"NYT-S": "'$NYT_S_VALUE'"}'
        else
          ${{ inputs.command }}
        fi

    - name: Cleanup SSH tunnel
      if: always() && inputs.ssh-proxy-host != '' && env.SSH_TUNNEL_PID != ''
      shell: bash
      run: |
        if [ -n "$SSH_TUNNEL_PID" ]; then
          kill $SSH_TUNNEL_PID 2>/dev/null || true
        fi
        rm -f ~/.ssh/xword_proxy_key
